;;
;;  Copyright (C) 2019-2021 Roman Pauer
;;
;;  Permission is hereby granted, free of charge, to any person obtaining a copy of
;;  this software and associated documentation files (the "Software"), to deal in
;;  the Software without restriction, including without limitation the rights to
;;  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
;;  of the Software, and to permit persons to whom the Software is furnished to do
;;  so, subject to the following conditions:
;;
;;  The above copyright notice and this permission notice shall be included in all
;;  copies or substantial portions of the Software.
;;
;;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
;;  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
;;  SOFTWARE.
;;

macro Call_Asm_Return _numpop
    load tmp0, esp, 4
    add esp, esp, 4 + (\_numpop * 4)
    tcall tmp0
endm

macro Call_Asm_VariableStack1 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    call \proc_name tmp0, tmp1
    mov eax, tmp0
endm

macro Call_Asm_VariableStack2 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    call \proc_name tmp0, tmp1, tmp2
    mov eax, tmp0
endm

macro Call_Asm_Stack0 proc_name
    call \proc_name
    mov eax, tmp0
endm

macro Call_Asm_Stack0_void proc_name
    call \proc_name
endm

macro Call_Asm_Stack1 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    call \proc_name tmp0
    mov eax, tmp0
endm

macro Call_Asm_Stack1_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    call \proc_name tmp0
endm

macro Call_Asm_Stack2 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    call \proc_name tmp0, tmp1
    mov eax, tmp0
endm

macro Call_Asm_Stack2_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    call \proc_name tmp0, tmp1
endm

macro Call_Asm_Stack3 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    call \proc_name tmp0, tmp1, tmp2
    mov eax, tmp0
endm

macro Call_Asm_Stack3_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    call \proc_name tmp0, tmp1, tmp2
endm

macro Call_Asm_Stack4 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3
    mov eax, tmp0
endm

macro Call_Asm_Stack4_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3
endm

macro Call_Asm_Stack5 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4
    mov eax, tmp0
endm

macro Call_Asm_Stack5_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4
endm

macro Call_Asm_Stack6 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5
    mov eax, tmp0
endm

macro Call_Asm_Stack6_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5
endm

macro Call_Asm_Stack7 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    add tmp6, esp, 7*4
    load tmp6, tmp6, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6
    mov eax, tmp0
endm

macro Call_Asm_Stack8 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    add tmp6, esp, 7*4
    load tmp6, tmp6, 4
    add tmp7, esp, 8*4
    load tmp7, tmp7, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7
    mov eax, tmp0
endm

macro Call_Asm_Stack8_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    add tmp6, esp, 7*4
    load tmp6, tmp6, 4
    add tmp7, esp, 8*4
    load tmp7, tmp7, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7
endm

macro Call_Asm_Stack9 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    add tmp6, esp, 7*4
    load tmp6, tmp6, 4
    add tmp7, esp, 8*4
    load tmp7, tmp7, 4
    add tmp8, esp, 9*4
    load tmp8, tmp8, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8
    mov eax, tmp0
endm

macro Call_Asm_Stack10_void proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    add tmp6, esp, 7*4
    load tmp6, tmp6, 4
    add tmp7, esp, 8*4
    load tmp7, tmp7, 4
    add tmp8, esp, 9*4
    load tmp8, tmp8, 4
    add tmp9, esp, 10*4
    load tmp9, tmp9, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9
endm

macro Call_Asm_Stack12 proc_name
    add tmp0, esp, 4
    load tmp0, tmp0, 4
    add tmp1, esp, 2*4
    load tmp1, tmp1, 4
    add tmp2, esp, 3*4
    load tmp2, tmp2, 4
    add tmp3, esp, 4*4
    load tmp3, tmp3, 4
    add tmp4, esp, 5*4
    load tmp4, tmp4, 4
    add tmp5, esp, 6*4
    load tmp5, tmp5, 4
    add tmp6, esp, 7*4
    load tmp6, tmp6, 4
    add tmp7, esp, 8*4
    load tmp7, tmp7, 4
    add tmp8, esp, 9*4
    load tmp8, tmp8, 4
    add tmp9, esp, 10*4
    load tmp9, tmp9, 4
    add tmp10, esp, 11*4
    load tmp10, tmp10, 4
    add tmp11, esp, 12*4
    load tmp11, tmp11, 4
    call \proc_name tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11
    mov eax, tmp0
endm

