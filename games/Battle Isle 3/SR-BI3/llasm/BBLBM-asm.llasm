;;
;;  Copyright (C) 2020-2021 Roman Pauer
;;
;;  Permission is hereby granted, free of charge, to any person obtaining a copy of
;;  this software and associated documentation files (the "Software"), to deal in
;;  the Software without restriction, including without limitation the rights to
;;  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
;;  of the Software, and to permit persons to whom the Software is furnished to do
;;  so, subject to the following conditions:
;;
;;  The above copyright notice and this permission notice shall be included in all
;;  copies or substantial portions of the Software.
;;
;;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
;;  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
;;  SOFTWARE.
;;

include llasm.llinc
include asm-calls.llinc

func LBM_DisplayLBM_c *path, *pixel_map, *palette, flags
funcv LBM_StartSerie_c number
funcv LBM_AutoSave_c *pixel_map

proc LBM_DisplayLBM public

; [esp + 4*4] = unsigned int flags
; [esp + 3*4] = uint8_t * palette
; [esp + 2*4] = void * pixel_map
; [esp +   4] = const char * path
; [esp      ] = return address

        Call_Asm_Stack4 LBM_DisplayLBM_c

        Call_Asm_Return 0

endp ; end procedure LBM_DisplayLBM


proc LBM_StartSerie public

; [esp +   4] = int number
; [esp      ] = return address

        Call_Asm_Stack1_void LBM_StartSerie_c

        Call_Asm_Return 0

endp ; end procedure LBM_StartSerie


proc LBM_AutoSave public

; [esp +   4] = void * pixel_map
; [esp      ] = return address

        Call_Asm_Stack1_void LBM_AutoSave_c

        Call_Asm_Return 0

endp ; end procedure LBM_AutoSave


